version: 2
references:
  restore_caches: &restore_caches
    restore_cache:
      keys:
        - source-{{ .Branch }}
        - deps-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
  install_deps: &install_deps
    run:
      name: Install dependencies
      command: |
        pipenv install --dev --ignore-pipfile --deploy

jobs:
  build:
    docker:
      - image: circleci/python:3.8

    steps:
      - checkout
      - *restore_caches
      - *install_deps
      - save_cache:
          key: source-{{ .Branch }}
          paths:
            - ".git"
      - save_cache:
          key: deps-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - "/home/circleci/.local/share/virtualenvs/"
  lint:
    docker:
      - image: circleci/python:3.8

    steps:
      - checkout
      - *restore_caches
      - *install_deps
      - run:
          name: Black autoformat check
          command: |
            pipenv run black --check .
      - run:
          name: Isort import order check
          command: |
            pipenv run isort . -c
  test:
    docker:
      - image: circleci/python:3.8

    steps:
      - checkout
      - *restore_caches
      - *install_deps
      - run:
          name: Unit tests
          command: |
            pipenv run py.test
      - run:
          name: Coverage upload
          command: |
            pipenv run coveralls
  check:
    docker:
      - image: circleci/python:3.8

    steps:
      - checkout
      - *restore_caches
      - *install_deps
      - run:
          name: Pipenv dependencies check
          command: |
            pipenv check
  deploy:
    docker:
      - image: circleci/python:3.8

    steps:
      - checkout
      - *restore_caches
      - *install_deps
      - run:
          name: Check git tag
          command: |
            pipenv run python setup.py verify
      - run:
          name: Init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = __token__" >> ~/.pypirc
            echo -e "password = $PYPI_TOKEN" >> ~/.pypirc
      - run:
          name: Create package
          command: |
            pipenv run python setup.py sdist
            pipenv run python setup.py bdist_wheel
      - run:
          name: Upload to PyPI
          command: |
            pipenv run twine upload dist/*

workflows:
  version: 2
  build_test:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - lint:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - test:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - check:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - lint
            - test
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
